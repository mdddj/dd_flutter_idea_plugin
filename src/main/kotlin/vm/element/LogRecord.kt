/*
 * Copyright (c) 2015, the Dart project authors.
 *
 * Licensed under the Eclipse Public License v1.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package vm.element

// This file is generated by the script: pkg/vm_service/tool/generate.dart in dart-lang/sdk.

import com.google.gson.JsonObject

class LogRecord(json: JsonObject) : Response(json) {

    /**
     * An error object associated with this log event.
     */
    fun getError(): InstanceRef {
        return InstanceRef(json.get("error").asJsonObject)
    }

    /**
     * The severity level (a value between 0 and 2000).
     *
     * See the package:logging `Level` class for an overview of the possible values.
     */
    fun getLevel(): Int {
        return getAsInt("level")
    }

    /**
     * The name of the source of the log message.
     */
    fun getLoggerName(): InstanceRef {
        return InstanceRef(json.get("loggerName").asJsonObject)
    }

    /**
     * The log message.
     */
    fun getMessage(): InstanceRef {
        return InstanceRef(json.get("message").asJsonObject)
    }

    /**
     * A monotonically increasing sequence number.
     */
    fun getSequenceNumber(): Int {
        return getAsInt("sequenceNumber")
    }

    /**
     * A stack trace associated with this log event.
     */
    fun getStackTrace(): InstanceRef {
        return InstanceRef(json.get("stackTrace").asJsonObject)
    }

    /**
     * The timestamp.
     */
    fun getTime(): Int {
        return getAsInt("time")
    }

    /**
     * The zone where the log was emitted.
     */
    fun getZone(): InstanceRef {
        return InstanceRef(json.get("zone").asJsonObject)
    }
}
