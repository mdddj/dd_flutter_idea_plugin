/*
 * Copyright (c) 2015, the Dart project authors.
 *
 * Licensed under the Eclipse Public License v1.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package vm.element

// This file is generated by the script: pkg/vm_service/tool/generate.dart in dart-lang/sdk.

import com.google.gson.JsonArray
import com.google.gson.JsonElement
import com.google.gson.JsonObject

class Frame(json: JsonObject) : Response(json) {

    /**
     * 可以返回 <code>null</code>。
     */
    fun getCode(): CodeRef? {
        val obj = json.get("code")?.asJsonObject ?: return null
        val type = json.get("type")?.asString
        if ("Instance" == type || "@Instance" == type) {
            val kind = json.get("kind")?.asString
            if ("Null" == kind) return null
        }
        return CodeRef(obj)
    }

    /**
     * 可以返回 <code>null</code>。
     */
    fun getFunction(): FuncRef? {
        val obj = json.get("function")?.asJsonObject ?: return null
        val type = json.get("type")?.asString
        if ("Instance" == type || "@Instance" == type) {
            val kind = json.get("kind")?.asString
            if ("Null" == kind) return null
        }
        return FuncRef(obj)
    }

    fun getIndex(): Int {
        return getAsInt("index")
    }

    /**
     * 可以返回 <code>null</code>。
     */
    fun getKind(): FrameKind? {
        if (json.get("kind") == null) return null

        val value = json.get("kind")
        try {
            return if (value == null) FrameKind.Unknown else FrameKind.valueOf(value.asString)
        } catch (e: IllegalArgumentException) {
            return FrameKind.Unknown
        }
    }

    /**
     * 可以返回 <code>null</code>。
     */
    fun getLocation(): SourceLocation? {
        val obj = json.get("location")?.asJsonObject ?: return null
        val type = json.get("type")?.asString
        if ("Instance" == type || "@Instance" == type) {
            val kind = json.get("kind")?.asString
            if ("Null" == kind) return null
        }
        return SourceLocation(obj)
    }

    /**
     * 可以返回 <code>null</code>。
     */
    fun getVars(): ElementList<BoundVariable>? {
        if (json.get("vars") == null) return null

        return object : ElementList<BoundVariable>(json.get("vars").asJsonArray) {
            override fun basicGet(array: JsonArray, index: Int): BoundVariable {
                return BoundVariable(array.get(index).asJsonObject)
            }
        }
    }
}
