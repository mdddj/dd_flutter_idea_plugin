/*
 * Copyright (c) 2015, the Dart project authors.
 *
 * Licensed under the Eclipse Public License v1.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
package vm.element

// This file is generated by the script: pkg/vm_service/tool/generate.dart in dart-lang/sdk.

import com.google.gson.JsonObject

/**
 * {@link Obj} 是由某个 isolate 拥有的持久对象。
 */
open class Obj(json: JsonObject) : Response(json) {

    /**
     * 如果一个对象在 Dart 堆中分配，它将有一个相应的类对象。
     *
     * 非实例的类不是 Dart 类，而是内部 vm 对象。
     *
     * 将对象移入或移出堆被认为是除 Instance 之外的类型的向后兼容更改。
     *
     * 可以返回 <code>null</code>。
     */
    open fun getClassRef(): ClassRef? {
        val obj = json.get("class")?.asJsonObject ?: return null
        val type = json.get("type").asString
        if ("Instance" == type || "@Instance" == type) {
            val kind = json.get("kind").asString
            if ("Null" == kind) return null
        }
        return ClassRef(obj)
    }

    /**
     * 如果对象的 ID 是固定的，则提供并设置为 true。如果为 true，则对象的 ID
     * 保证不会更改或过期。但是，对象仍可能被 _Collected_。
     *
     * 可以返回 <code>null</code>。
     */
    fun getFixedId(): Boolean {
        return getAsBoolean("fixedId")
    }

    /**
     * 对象的唯一标识符。传递给 getObject RPC 以重新加载此对象。
     *
     * 某些对象在重新加载时可能会获得新的 ID。
     */
    fun getId(): String? {
        return getAsString("id")
    }

    /**
     * 此对象在堆中的大小。
     *
     * 如果对象未在堆中分配，则省略此字段。
     *
     * 请注意，某些对象的大小可能为零。在当前的 VM 实现中，这种情况发生在
     * 小整数上，它们完全存储在其对象指针内。
     *
     * 可以返回 <code>null</code>。
     */
    fun getSize(): Int {
        return getAsInt("size")
    }
}
